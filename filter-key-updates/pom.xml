<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.signal</groupId>
  <artifactId>filter-key-updates-lambda</artifactId>
  <version>JGITVER</version>

  <properties>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.release>21</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <junit.version>5.13.1</junit.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>bom</artifactId>
        <version>2.31.69</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <type>pom</type>
        <scope>import</scope>
        <version>${junit.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-lambda-java-core</artifactId>
      <version>1.3.0</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-lambda-java-events</artifactId>
      <version>3.16.0</version>
    </dependency>
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>kinesis</artifactId>
    </dependency>
    <dependency>
      <!-- resolve a dependency resolution conflict by preferring the newer, direct,
           versions from software.amazon.awssdk:apache-client. When apache-client updates the httpclient version,
           dependency convergence will fail, and we can re-evaluate these exclusions.
           -->
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.13</version>
      <exclusions>
        <exclusion>
          <!--
          +-org.signal:filter-key-updates-lambda:jar
            +-software.amazon.awssdk:kinesis:jar:2.31.18:compile
              +-software.amazon.awssdk:apache-client:jar:2.31.18:runtime
                +-org.apache.httpcomponents:httpclient:jar:4.5.13:runtime
                  +-org.apache.httpcomponents:httpcore:jar:4.4.13:runtime
          and
          +-org.signal:filter-key-updates-lambda:jar
            +-software.amazon.awssdk:kinesis:jar:2.31.18:compile
              +-software.amazon.awssdk:apache-client:jar:2.31.18:runtime
                +-org.apache.httpcomponents:httpcore:jar:4.4.16:runtime
          -->
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpcore</artifactId>
        </exclusion>
        <exclusion>
          <!--
          +-org.signal:filter-key-updates-lambda
            +-software.amazon.awssdk:kinesis:2.31.18
                +-software.amazon.awssdk:apache-client:2.31.18
                    +-org.apache.httpcomponents:httpclient:4.5.13
                        +-commons-codec:commons-codec:1.11
          and
          +-org.signal:filter-key-updates-lambda
            +-software.amazon.awssdk:kinesis:2.31.18
                +-software.amazon.awssdk:apache-client:2.31.18
                    +-commons-codec:commons-codec:1.17.1
          -->
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.19.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>33.4.8-jre</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>5.18.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-lambda-java-tests</artifactId>
      <version>1.1.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>com.bazaarvoice.maven.plugins</groupId>
        <artifactId>s3-upload-maven-plugin</artifactId>
        <version>2.0.3</version>
        <configuration>
          <source>${project.build.directory}/${project.build.finalName}.jar</source>
          <bucketName>${bucketName}</bucketName>
          <destination>${bucketKey}/${project.build.finalName}.jar</destination>
        </configuration>
        <executions>
          <execution>
            <id>deploy-to-s3</id>
            <phase>deploy</phase>
            <goals>
              <goal>s3-upload</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.14.0</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.6.0</version>
        <configuration>
          <createDependencyReducedPom>false</createDependencyReducedPom>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <dependencyConvergence/>
                <requireMavenVersion>
                  <version>3.9.4</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.3</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.1.4</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
