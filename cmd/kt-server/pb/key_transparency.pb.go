//
// Copyright 2025 Signal Messenger, LLC
// SPDX-License-Identifier: AGPL-3.0-only
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: key_transparency.proto

package pb

import (
	pb "github.com/signalapp/keytransparency/tree/transparency/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AuditRequest comes from a third-party auditor that wishes to sync with the
// latest state of the log.
type AuditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Limit uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *AuditRequest) Reset() {
	*x = AuditRequest{}
	mi := &file_key_transparency_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditRequest) ProtoMessage() {}

func (x *AuditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_key_transparency_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditRequest.ProtoReflect.Descriptor instead.
func (*AuditRequest) Descriptor() ([]byte, []int) {
	return file_key_transparency_proto_rawDescGZIP(), []int{0}
}

func (x *AuditRequest) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *AuditRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// AuditResponse contains the list of new changes to the log.
type AuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates []*pb.AuditorUpdate `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
	More    bool                `protobuf:"varint,2,opt,name=more,proto3" json:"more,omitempty"`
}

func (x *AuditResponse) Reset() {
	*x = AuditResponse{}
	mi := &file_key_transparency_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditResponse) ProtoMessage() {}

func (x *AuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_key_transparency_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditResponse.ProtoReflect.Descriptor instead.
func (*AuditResponse) Descriptor() ([]byte, []int) {
	return file_key_transparency_proto_rawDescGZIP(), []int{1}
}

func (x *AuditResponse) GetUpdates() []*pb.AuditorUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *AuditResponse) GetMore() bool {
	if x != nil {
		return x.More
	}
	return false
}

type TreeSizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TreeSize uint64 `protobuf:"varint,1,opt,name=tree_size,json=treeSize,proto3" json:"tree_size,omitempty"`
}

func (x *TreeSizeResponse) Reset() {
	*x = TreeSizeResponse{}
	mi := &file_key_transparency_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TreeSizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeSizeResponse) ProtoMessage() {}

func (x *TreeSizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_key_transparency_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeSizeResponse.ProtoReflect.Descriptor instead.
func (*TreeSizeResponse) Descriptor() ([]byte, []int) {
	return file_key_transparency_proto_rawDescGZIP(), []int{2}
}

func (x *TreeSizeResponse) GetTreeSize() uint64 {
	if x != nil {
		return x.TreeSize
	}
	return 0
}

var File_key_transparency_proto protoreflect.FileDescriptor

var file_key_transparency_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x6b, 0x74, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a,
	0x0c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5a, 0x0a, 0x0d, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6d, 0x6f, 0x72, 0x65, 0x22, 0x2f, 0x0a, 0x10, 0x54, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x65,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x72,
	0x65, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x32, 0xcf, 0x01, 0x0a, 0x16, 0x4b, 0x65, 0x79, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x3a, 0x0a, 0x08, 0x54, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x6b, 0x74, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a,
	0x05, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x10, 0x2e, 0x6b, 0x74, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6b, 0x74, 0x2e, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x0e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x1d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x72, 0x65, 0x65, 0x48, 0x65, 0x61, 0x64, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x70,
	0x2f, 0x6b, 0x65, 0x79, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x6b, 0x74, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_key_transparency_proto_rawDescOnce sync.Once
	file_key_transparency_proto_rawDescData = file_key_transparency_proto_rawDesc
)

func file_key_transparency_proto_rawDescGZIP() []byte {
	file_key_transparency_proto_rawDescOnce.Do(func() {
		file_key_transparency_proto_rawDescData = protoimpl.X.CompressGZIP(file_key_transparency_proto_rawDescData)
	})
	return file_key_transparency_proto_rawDescData
}

var file_key_transparency_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_key_transparency_proto_goTypes = []any{
	(*AuditRequest)(nil),       // 0: kt.AuditRequest
	(*AuditResponse)(nil),      // 1: kt.AuditResponse
	(*TreeSizeResponse)(nil),   // 2: kt.TreeSizeResponse
	(*pb.AuditorUpdate)(nil),   // 3: transparency.AuditorUpdate
	(*emptypb.Empty)(nil),      // 4: google.protobuf.Empty
	(*pb.AuditorTreeHead)(nil), // 5: transparency.AuditorTreeHead
}
var file_key_transparency_proto_depIdxs = []int32{
	3, // 0: kt.AuditResponse.updates:type_name -> transparency.AuditorUpdate
	4, // 1: kt.KeyTransparencyService.TreeSize:input_type -> google.protobuf.Empty
	0, // 2: kt.KeyTransparencyService.Audit:input_type -> kt.AuditRequest
	5, // 3: kt.KeyTransparencyService.SetAuditorHead:input_type -> transparency.AuditorTreeHead
	2, // 4: kt.KeyTransparencyService.TreeSize:output_type -> kt.TreeSizeResponse
	1, // 5: kt.KeyTransparencyService.Audit:output_type -> kt.AuditResponse
	4, // 6: kt.KeyTransparencyService.SetAuditorHead:output_type -> google.protobuf.Empty
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_key_transparency_proto_init() }
func file_key_transparency_proto_init() {
	if File_key_transparency_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_key_transparency_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_key_transparency_proto_goTypes,
		DependencyIndexes: file_key_transparency_proto_depIdxs,
		MessageInfos:      file_key_transparency_proto_msgTypes,
	}.Build()
	File_key_transparency_proto = out.File
	file_key_transparency_proto_rawDesc = nil
	file_key_transparency_proto_goTypes = nil
	file_key_transparency_proto_depIdxs = nil
}
