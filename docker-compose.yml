name: 'kt-dynamodb'
services:
  'generate-keys':
    profiles:
      - 'generate-keys'
    build:
      context: '.'
      dockerfile: './Dockerfile'
      target: 'generate-keys'
    network_mode: 'none'
    networks: []
  'test-dynamodb-init':
    profiles:
      - 'test'
    depends_on:
      'test-dynamodb':
        required: true
        condition: 'service_healthy'
    links:
      - 'test-dynamodb'
    image: amazon/aws-cli:latest
    command: [
      "dynamodb",
      "create-table",
      "--table-name",
      "kt_local",
      "--attribute-definitions",
      "AttributeName=k,AttributeType=S",
      "--key-schema",
      "AttributeName=k,KeyType=HASH",
      "--billing-mode",
      "PAY_PER_REQUEST"
    ]
    environment:
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
      AWS_ENDPOINT_URL: test-dynamodb:8000
      AWS_REGION: local-kt
    networks: []
  'test-dynamodb':
    profiles:
      - 'test'
    restart: 'on-failure'
    image: amazon/dynamodb-local:2.5.2
    healthcheck:
      timeout: '1s'
      test: [
        "CMD",
        "bash",
        "-c",
        # Expecting 400 Bad Request, because we require authentication
        "curl --head -o /dev/null -s -w \"%{http_code}\" test-dynamodb:8000 | grep \"^400$\" > /dev/null"
      ]
    networks: []
  'test-server':
    profiles:
      - 'test'
    restart: 'on-failure'
    container_name: 'test-server'
    depends_on:
      'test-dynamodb-init':
        # Fails if DBs have already been initialized
        required: false
        condition: 'service_completed_successfully'
    links:
      - 'test-dynamodb'
    build:
      context: "."
      dockerfile: "./Dockerfile"
      target: "run-server"
    command: [ "-config", "/run/secrets/test_config.yaml" ]
    environment:
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_ENDPOINT_URL=test-dynamodb:8000
      - AWS_REGION=local-kt
    secrets:
      - source: 'test-config'
        target: '/run/secrets/'
    networks: []
  'tests':
    profiles:
      - 'test'
    links:
      - 'test-server'
    build:
      context: "."
      dockerfile: "./Dockerfile"
      target: "run-tests"
    secrets:
      - source: 'test-config'
        target: '/run/secrets/'
    networks: []
  'dynamodb-init':
    profiles:
      - 'prod'
    depends_on:
      'dynamodb':
        required: true
        condition: 'service_healthy'
    links:
      - 'dynamodb'
    image: amazon/aws-cli:latest
    command: [
      "dynamodb",
      "create-table",
      "--table-name",
      "kt_local",
      "--attribute-definitions",
      "AttributeName=k,AttributeType=S",
      "--key-schema",
      "AttributeName=k,KeyType=HASH",
      "--billing-mode",
      "PAY_PER_REQUEST"
    ]
    environment:
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
      AWS_ENDPOINT_URL: dynamodb:8000
      AWS_REGION: local-kt
    networks: []
  'dynamodb':
    profiles:
      - 'prod'
    restart: 'on-failure'
    image: amazon/dynamodb-local:2.5.2
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "/data/"]
    healthcheck:
      timeout: '1s'
      test: [
        "CMD",
        "bash",
        "-c",
        # Expecting 400 Bad Request, because we require authentication
        "curl --head -o /dev/null -s -w \"%{http_code}\" dynamodb:8000 | grep \"^400$\" > /dev/null"
      ]
    volumes:
      - type: 'volume'
        source: 'dynamodb'
        target: '/data'
    networks: []
  'server':
    profiles:
      - 'prod'
    restart: 'on-failure'
    container_name: 'server'
    depends_on:
      'dynamodb-init':
        # Fails if DBs have already been initialized
        required: false
        condition: 'service_completed_successfully'
    links:
      - 'dynamodb'
    build:
      context: "."
      dockerfile: "./Dockerfile"
      target: "run-server"
    command: [ "-config", "/run/secrets/config.yaml" ]
    environment:
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_ENDPOINT_URL=dynamodb:8000
      - AWS_REGION=local-kt
    secrets:
      - source: 'config'
        target: '/run/secrets/'
    networks: []
  'client':
    profiles:
      - 'prod'
      - 'client'
    links:
      - 'server'
    build:
      context: "."
      dockerfile: "./Dockerfile"
      target: "run-client"
    entrypoint: [ "sh" ]
    secrets:
      - source: 'config'
        target: '/run/secrets/'
    networks: []
volumes:
  'dynamodb':
secrets:
  'test-config':
    file: './cmd/kt-server/example/'
  'config':
    file: './example/'
